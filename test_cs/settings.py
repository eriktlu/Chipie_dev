"""
Django settings for test_cs project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

from django import db

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-86k7&z#g=8i@(rl+^^4!qfhqm*gk5%hw4e+zt-8yka50g_ux9='

# Crypto keys

PRIVATE_KEY_BTC = 'PRIVATE_KEY_BTC'

# coinbase api key
COINBASE_COMMERCE_API_KEY = 'COINBASE_API_KEY'

COINBASE_COMMERCE_WEBHOOK_SHARED_SECRET = 'COINBASE_SHARED_SECRET'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['ALLOWED_HOSTS']

CSRF_TRUSTED_ORIGINS = ['TRUSTED_ORIGINS']


AUTH_USER_MODEL = 'main.CustomUser'

SOCIAL_AUTH_USER_MODEL = 'main.CustomUser'

# SOCIAL_AUTH_USER_FIELDS = ['personaname']
USER_FIELDS = ['username', 'player']


# Steam API Key
SOCIAL_AUTH_STEAM_API_KEY = 'STEAM_API_KEY'

# PostgreSQL social auth extra fields to jsonb
SOCIAL_AUTH_JSONFIELD_ENABLED = True

# After Login Redirection
LOGIN_REDIRECT_URL = 'home'

# After Logout Redirection
LOGOUT_REDIRECT_URL = "home"

# Login URL
LOGIN_URL = '/login/steam/'


# Extra data for player
SOCIAL_AUTH_STEAM_EXTRA_DATA = ['player']

# Authentication backends that are allowed in the application
AUTHENTICATION_BACKENDS = (
    'social_core.backends.steam.SteamOpenId',

    # 'drf_social_oauth2.backends.DjangoOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'main.apps.MainConfig',
    'deposit',
    'withdraw',
    'casebattle',
    'crash',

    # 'oauth2_provider',
    'social_django',
    # 'drf_social_oauth2',
    'rest_framework',
    'corsheaders',
    'requests',
    'channels',
    'steampy',
    'schedule',
    'apscheduler',
    
] 

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'test_cs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'test_cs.wsgi.application'
ASGI_APPLICATION = 'test_cs.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            # Heroku conf
            'hosts': [os.environ.get('REDIS_URL', '6379')],

            # localhost conf
            # 'hosts': [('127.0.0.1', 6379)]
        }
    }
}

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# localhost conf
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'circus_dev',
#         'USER': 'postgres',
#         'PASSWORD': 'y>ZZx,)TL9(bHsnQ1',
#         'HOST': 'localhost',
#         'PORT': '5432'
#     }
# }

# circus_dev
# postgres
# y>ZZx,)TL9(bHsnQ1


# Heroku conf
import dj_database_url
DATABASES = {
    'default': dj_database_url.config(conn_max_age=600)
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# MEDIA_ROOT = '/media/'

# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)



# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOWED_ORIGINS = [
     'http://localhost:3000'
]

# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
#         'drf_social_oauth2.authentication.SocialAuthentication',
#     ),
# }

